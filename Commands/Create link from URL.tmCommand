<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU
require ENV['TM_SUPPORT_PATH'] + '/lib/escape.rb'
require 'erb'
require 'open-uri'
require 'net/http' 

def entity_escape(text)
  text.gsub(/&amp;(?!([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);)/, '&amp;amp;')
end

def make_link(text)
  case text
  when %r{\A(mailto:)?(.*?@.*\..*)\z}:
    "mailto:#{$2.gsub(/./) {sprintf("&amp;#x%02X;", $&amp;.unpack("U")[0])}}"
  when %r{http://www.(amazon.(?:com|co.uk|co.jp|ca|fr|de))/.+?/([A-Z0-9]{10})/[-a-zA-Z0-9_./%?=&amp;]+}:
    "http://#{$1}/dp/#{$2}"
  when %r{\A[a-zA-Z][a-zA-Z0-9.+-]*://.*\z}:
    entity_escape(text)
  when %r{\A(www\..*|.*\.(com|uk|net|org|info))\z}:
    "http://#{entity_escape text}"
  when %r{\A.*\.(com|uk|net|org|info)\z}:
    "http://#{entity_escape text}"
  when %r{\A\S+\z}:
    entity_escape(text)
  else
    "http://example.com/"
  end
end

url = make_link %x{__CF_USER_TEXT_ENCODING=$UID:0x8000100:0x8000100 pbpaste}.strip

if url =~ /^http:\/\// and url != 'http://example.com/'
  eval 'title = fp.read.match(/&lt;title&gt;([^&lt;&gt;]*)&lt;\/title&gt;/i).to_a[1].strip rescue nil' if fp = open(url) rescue nil
else
  title = url
end

input = STDIN.read
puts '&lt;a href="' + url + '"&gt;' + title + '&lt;/a&gt;'</string>
	<key>input</key>
	<string>selection</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^~@l</string>
	<key>name</key>
	<string>Create link from URL</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>atCaret</string>
	<key>scope</key>
	<string>text.html</string>
	<key>uuid</key>
	<string>DECA992E-6EC0-4621-9881-65CDD763007B</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
